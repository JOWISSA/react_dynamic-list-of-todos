{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","isSelected","className","map","todo","classNames","completed","title","type","onClick","id","TodoFilter","query","filter","selectedFilter","onSetQuery","onSetSelectedFilter","value","onChange","event","target","placeholder","style","pointerEvents","hidden","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onSetSelectedTodo","useState","user","setUser","loadingUser","a","userId","selectedUser","useEffect","href","email","name","App","allTodos","setAllTodos","selectTodos","setSelectTodos","isLoading","setIsLoading","filterType","setFilterType","setQuery","finally","trimmed","toLocaleLowerCase","trim","visibleTodos","includes","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,WAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCAEIH,EAAMI,KAAI,SAAAC,GAAI,OACZ,qBACE,UAAQ,OACRF,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,eACA,oBAAIA,UAAU,iBACd,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IAAW,CACvB,mBAAsC,IAAnBD,EAAKE,UACxB,oBAAuC,IAAnBF,EAAKE,YAF3B,SAMGF,EAAKG,UAGV,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVM,KAAK,SACLC,QAAS,kBAAMR,EAAWG,IAJ5B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBACEA,UAAWG,IAAW,MAAO,CAC3B,SAAUD,EAAKM,MAAL,OAAYV,QAAZ,IAAYA,OAAZ,EAAYA,EAAcU,IACpC,eAAgBN,EAAKM,MAAL,OAAYV,QAAZ,IAAYA,OAAZ,EAAYA,EAAcU,gBAzB/CN,EAAKM,aC1BTC,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACgBC,EAGZ,EAHJC,eACAC,EAEI,EAFJA,WACAC,EACI,EADJA,oBAEA,OACE,uBAAMd,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRe,MAAOJ,EACPK,SAAU,SAACC,GACTH,EAAoBG,EAAMC,OAAOH,QAJrC,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGf,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRM,KAAK,OACLN,UAAU,QACVmB,YAAY,YACZJ,MAAOL,EACPM,SAAU,SAACC,GACTJ,EAAWI,EAAMC,OAAOH,UAG5B,sBAAMf,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAIbU,GACE,sBACEV,UAAU,gBACVoB,MAAO,CAAEC,cAAe,OAF1B,SAKE,wBACE,UAAQ,oBACRf,KAAK,SACLN,UAAU,SACVO,QAAU,WACRM,EAAW,IACXC,EAAoB,QAEtBQ,QAAM,a,uBCjDtB,SAASC,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,ICrBMC,EAAmB,kBAC9B,qBAAKlC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCONmC,EAA6B,SAAC,GAGpC,IAFLrC,EAEI,EAFJA,aACAsC,EACI,EADJA,kBAEA,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAW,uCAAG,4BAAAC,EAAA,sEFQEC,EEPe5C,EAAa4C,OFOTnB,EAAG,iBAAiBmB,IERzC,OACZC,EADY,OAGlBJ,EAAQI,GAHU,iCFQC,IAACD,IERF,OAAH,qDAUjB,OAJAE,qBAAU,WACRJ,MACC,IAGD,sBAAKxC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdsC,EAEG,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAaU,MAGzB,wBACEF,KAAK,SACLN,UAAU,SACV,UAAQ,cACRO,QAAS,WACP6B,EAAkB,YAIxB,sBAAKpC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAaO,QAGhB,oBAAGL,UAAU,QAAQ,UAAQ,aAA7B,UACE,wBACEA,UAAWG,IAAW,CACpB,mBAAoBL,EAAaM,UACjC,mBAAoBN,EAAaM,YAHrC,SAMGN,EAAaM,UACT,OACA,YAGN,OAED,mBAAGyC,KAAI,iBAAYP,EAAKQ,OAAxB,SACGR,EAAKS,gBAOd,cAAC,EAAD,QCjEGC,EAAgB,WAC3B,MAAgCX,mBAAiB,IAAjD,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAsCb,mBAAsB,MAA5D,mBAAOc,EAAP,KAAoBC,EAApB,KACA,EAAkCf,oBAAS,GAA3C,mBAAOgB,EAAP,KAAkBC,EAAlB,KACA,EAAoCjB,mBAAS,OAA7C,mBAAOkB,EAAP,KAAmBC,EAAnB,KACA,EAA0BnB,mBAAS,IAAnC,mBAAO3B,EAAP,KAAc+C,EAAd,KAEAb,qBAAU,WACRU,GAAa,GHEa/B,EAAY,UGD3BO,KAAKoB,GACbQ,SAAQ,WACPJ,GAAa,QAEhB,IAEH,IAAMK,EAAUjD,EAAMkD,oBAAoBC,OAEpCC,EAAeb,EAClBtC,QAAO,SAACT,GAGP,OAFcA,EAAKG,MAAMuD,oBAEZG,SAASJ,MAEvBhD,QAAO,SAACT,GACP,OAAQqD,GACN,IAAK,SACH,OAAQrD,EAAKE,UACf,IAAK,YACH,OAAOF,EAAKE,UAEd,QACE,OAAO,MAIf,OACE,qCACE,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,MAAOA,EACPE,eAAgB2C,EAChB1C,WAAY4C,EACZ3C,oBAAqB0C,MAIzB,qBAAKxD,UAAU,QAAf,SACGqD,EACG,cAAC,EAAD,IAEA,cAAC,EAAD,CACExD,MAAOiE,EACPhE,aAAcqD,EACdpD,WAAYqD,aAQzBD,GACC,cAAC,EAAD,CACErD,aAAcqD,EACdf,kBAAmBgB,QChF7BY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d88a2d27.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  isSelected: (value: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  isSelected,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': todo.completed === false,\n                'has-text-success': todo.completed === true,\n\n              })}\n              >\n                {todo.title }\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => isSelected(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far', {\n                      'fa-eye': todo.id !== selectedTodo?.id,\n                      'fa-eye-slash': todo.id === selectedTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string\n  selectedFilter: string\n  onSetQuery: (value: string) => void;\n  onSetSelectedFilter: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  selectedFilter: filter,\n  onSetQuery,\n  onSetSelectedFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => {\n              onSetSelectedFilter(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            onSetQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {\n          query && (\n            <span\n              className=\"icon is-right\"\n              style={{ pointerEvents: 'all' }}\n            >\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={(() => {\n                  onSetQuery('');\n                  onSetSelectedFilter('all');\n                })}\n                hidden\n              />\n            </span>\n          )\n        }\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onSetSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSetSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  const loadingUser = async () => {\n    const selectedUser = await getUser(selectedTodo.userId);\n\n    setUser(selectedUser);\n  };\n\n  useEffect(() => {\n    loadingUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodo.id}`}\n              </div>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  onSetSelectedTodo(null);\n                }}\n              />\n            </header>\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                <strong\n                  className={classNames({\n                    'has-text-danger': !selectedTodo.completed,\n                    'has-text-success': selectedTodo.completed,\n                  })}\n                >\n                  {selectedTodo.completed\n                    ? ('Done')\n                    : ('Planned')}\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )\n        : (\n          <Loader />\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useEffect, useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [allTodos, setAllTodos] = useState<Todo[]>([]);\n  const [selectTodos, setSelectTodos] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filterType, setFilterType] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos().then(setAllTodos)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const trimmed = query.toLocaleLowerCase().trim();\n\n  const visibleTodos = allTodos\n    .filter((todo) => {\n      const title = todo.title.toLocaleLowerCase();\n\n      return title.includes(trimmed);\n    })\n    .filter((todo) => {\n      switch (filterType) {\n        case 'active':\n          return !todo.completed;\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                selectedFilter={filterType}\n                onSetQuery={setQuery}\n                onSetSelectedFilter={setFilterType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectTodos}\n                    isSelected={setSelectTodos}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectTodos && (\n        <TodoModal\n          selectedTodo={selectTodos}\n          onSetSelectedTodo={setSelectTodos}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}